import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return 0.1 * x * ( 30 - x )

def f2(variable):
    [ x, y ] = variable
    return [0.25*x - 0.01*x*y, 0.01*x*y - y]
    
def euler(func, val_init_x):
    tf = 10
    n = 500
    h = tf/float(n)
    x = np.zeros([n,])
    x[0] = val_init_x
    for i in range(n-1):
        x[i+1] = x[i] + h * func(x[i])
    return x

def RK2(func, val_init_x):
    tf = 10
    n = 500
    h = tf/float(n)
    x = np.zeros([n,])
    x[0] = val_init_x
    for i in range(n-1):
        x[i+1] = x[i] + (h/2) * x[i] + (h/2) * func(x[i]+h*func(x[i]))
    return x
    
def desine():
    fig = plt.figure()
    plt.plot(euler(f,5),label='x0=5 euler')
    plt.plot(euler(f,50),label='x0=50 euler')
    plt.plot(RK2(f,5),label='x0=5 RK2')
    plt.plot(RK2(f,50),label='x0=50 RK2')
    plt.xlabel('Time')
    plt.ylabel('Population Number')
    plt.legend()
    plt.show()

desine()
